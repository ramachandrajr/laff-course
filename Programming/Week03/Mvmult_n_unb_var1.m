function [ y_out ] = Mvmult_n_unb_var1( A, x, y )

  % Iterate on matrix A from to bottom
  [ AT, ...
    AB ] = FLA_Part_2x1( A, ...
                         0, 'FLA_TOP' );

  % Iterate on matrix y from top to bottom
  [ yT, ...
    yB ] = FLA_Part_2x1( y, ...
                         0, 'FLA_TOP' );

  % while first part of partition does not contain all elements
  while ( size( AT, 1 ) < size( A, 1 ) )

    % Partition the partitioned top and bottom matrices into a top matrix
    % and a single row vector (represented by a1t) and a second A2 vector.
    % this row vector is obtained from the bottom matrix AB.
    [ A0, ...
      a1t, ...
      A2 ] = FLA_Repart_2x1_to_3x1( AT, ...
                                    AB, ...
                                    1, 'FLA_BOTTOM' );

    % divide output matrix y into upper and lower parts along with a single
    % element psi1 this will be updated iterating over the matrix rows and
    % dot producting with matrix x matrix
    [ y0, ...
      psi1, ...
      y2 ] = FLA_Repart_2x1_to_3x1( yT, ...
                                    yB, ...
                                    1, 'FLA_BOTTOM' );

    %------------------------------------------------------------%

    % perform dot product of row of A and vector x 
    psi1 = laff_dot( a1t, x  );

    %------------------------------------------------------------%

    [ AT, ...
      AB ] = FLA_Cont_with_3x1_to_2x1( A0, ...
                                       a1t, ...
                                       A2, ...
                                       'FLA_TOP' );

    [ yT, ...
      yB ] = FLA_Cont_with_3x1_to_2x1( y0, ...
                                       psi1, ...
                                       y2, ...
                                       'FLA_TOP' );

  end

  y_out = [ yT
            yB ];

return
